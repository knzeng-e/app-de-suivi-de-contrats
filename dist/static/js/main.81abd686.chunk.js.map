{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/contracts/ContractSummary.js","components/contracts/ContractList.js","components/dashboard/Dashboard.js","store/actions/contractActions.js","components/contracts/ContractDetails.js","components/contracts/ModifyContract.js","components/auth/Signin.js","components/auth/SignUp.js","components/contracts/CreateContract.js","App.js","serviceWorker.js","store/reducers/authreducer.js","store/reducers/contractReducer.js","store/reducers/rooteReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","state","initials","firebase","profile","initals","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","console","log","react_default","a","createElement","className","NavLink","to","onClick","SignedOutLinks","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","ContractSummary","_ref","badge_caption","contract","contract_id","dateTab","validity","title","colorStatus","data-badge-caption","ContractList","contracts","length","map","contracts_ContractSummary","id","key","Dashboard","_this$props","this","contracts_ContractList","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","deleteContract","del","window","confirm","getFirestore","doc","delete","history","push","backHome","catch","err","modifyContract","_ref3","myContract","content","update","res","ownProps","match","params","data","authorFistName","authorLastName","moment","createdAt","toDate","calendar","ModifyContract","handleChange","e","_this","setState","Object","defineProperty","target","value","setColor","date","firstRemind","secondRemind","isSameOrAfter","isBefore","isBetween","handleDate","locale","saveDate","subtract","format","endDate","firstNotif","secondNotif","handleSubmit","preventDefault","onSubmit","htmlFor","required","onChange","entry_default","minDate","Date","SignIn","email","password","signIn","authError","class","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","response","user","set","CreateContract","creationDate","_this$setState","createContract","authorId","add","objectSpread","authorFirstName","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ContractDetails","Boolean","location","hostname","initState","authReducer","arguments","undefined","action","message","contractReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81abd686.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    const { initials } = props\n    console.log('state to props ==> ', initials)\n    return (\n        <ul className = \"right\">\n            <li><NavLink to = '/create'>Nouveau contrat</NavLink></li>\n            <li><a onClick = {props.signOut}>Déconnexion</a></li>\n            <li><NavLink to = '/' className = 'btn btn-floating green lighten-2'>{initials}</NavLink></li>\n        </ul>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initials : state.firebase.profile.initals\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const firebase = getFirebase();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName : newUser.firstName,\n                lastName : newUser.lastName,\n                initals: newUser.firstName[0] + newUser.lastName[0]\n            })\n\n        }).then(() => {\n            dispatch({ type : 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className = \"right\">\n            <li><NavLink to = '/signup'>S'enregistrer</NavLink></li>\n            <li><NavLink to = '/signin'>Connexion</NavLink></li>\n        </ul>\n    );\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth } = props;\n   const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\n    return (\n        <nav className = \"nav-wrapper indigo darken-4 z-depth-4\">\n            <div className = \"container\">\n                <Link to='/' className = \"left brand-logo\">Contrats Papel</Link>\n                { links }\n            </div>\n        </nav>\n    );\n}\nconst mapStateToProps = (state) => {\n    console.log('Print State ====> ', state)\n    return {\n        auth : state.firebase.auth\n        //auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\n//import moment from 'moment';\nimport { Link } from 'react-router-dom';\n\n\nconst ContractSummary = ({contract, contract_id}) => {\n\n    //const currentDate = moment(contract.createdAt.toDate()).calendar();\n    //const validityDate = new Date (contract.validity.seconds * 1000).toLocaleDateString();\n    const dateTab = contract.validity/*.split('/');*/\n    let badge_caption;\n    const looking = () => {\n        \n        badge_caption = dateTab;\n\n         if (contract.colorStatus === 'green'){\n            //badge_caption = '[ + de 6 mois ]';\n            return \"new badge green darken-2 z-depth-4\";\n         }\n            //return \"card green darken-2 z-depth-4 contract-summary\";\n        if (contract.colorStatus === 'orange') {\n            //badge_caption = '[ - de 6 mois ]';\n            return \"new badge orange darken-1 z-depth-4\";\n        }\n            //return \"card orange darken-2 z-depth-4 contract-summary\";\n        if (contract.colorStatus === 'red') {\n            //badge_caption = '[ - de 3 mois ]';\n            return \"new badge red darken-4 z-depth-4\";\n        }\n            //return \"card red darken-4 z-depth-4 contract-summary\";\n        if (contract.colorStatus === 'black') {\n            badge_caption = 'contrat expiré';\n            return \"new badge black z-depth-4\";\n        }\n            //return \"card black z-depth-4 contract-summary\";\n    }\n    \n    return (\n    <ul className=\"collapsible contract_list\">\n        <li>\n            <Link to = {'/contract/' +  contract_id}>\n                <div className=\"contract_list collapsible-header hoverable\">\n                  <i className=\"material-icons\">layers</i>\n                    {contract.title}\n                    <span className = {looking()} data-badge-caption= {badge_caption}></span>\n                </div>\n            </Link>\n            <div className=\"collapsible-body\"> \n            </div>\n        </li>\n    </ul>\n    );\n}\n\nexport default ContractSummary;","import React from 'react';\nimport ContractSummary from './ContractSummary';\n\nconst ContractList = ({contracts}) => {\n    if (contracts && contracts.length !== 0) {\n        console.log('contracts ==> ', contracts.length);\n\n        return (    \n        <div className = \"contract-list section\">\n            {\n                contracts && contracts.map(contract => {\n                    return (\n                            <ContractSummary \n                                contract = {contract}\n                                contract_id = {contract.id}\n                                key = {contract.id}/> \n                    );  \n                })\n            }\n\n        </div>\n    );\n    } else {\n        console.log('VIDE!!!!!');   \n        return <div className=\"section\"><blockquote>Vous n'avez pas de contrats ...</blockquote></div>}\n}\n export default ContractList;\n ","import React, { Component } from 'react';\n//import Notifications from './Notifications';\nimport ContractList from './../contracts/ContractList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render()\n    {\n        //console.log(this.props);\n        const { contracts, auth } = this.props;\n        \n        if (!auth.uid) return <Redirect to = '/signin' />\n        return(\n            <div className = \" dashboard container\">\n                <div className= \"row\">\n                    <div className = \"col s12 m6\">\n                        <ContractList contracts = { contracts }/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return ({\n        contracts: state.firestore.ordered.contracts,\n        auth: state.firebase.auth\n    })\n\n}\n\nexport default compose( \n    connect (mapStateToProps),\n    firestoreConnect([\n        {collection : 'contracts'}\n    ]),\n) (Dashboard)","import { Redirect } from 'react-router-dom';\nimport React from 'react';\n\nexport const createContract = (contract) => {\n    return (\n        (dispatch, getState, { getFirebase, getFirestore }) => {\n            //make async call to database\n            const firestore = getFirestore();\n            const profile = getState().firebase.profile;\n            const authorId = getState().firebase.auth.uid;\n\n            firestore.collection('contracts').add({\n                ...contract,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorId: authorId,\n                createdAt: new Date()\n\n            }).then(() => {\n                dispatch({ type: 'CREATE_CONTRACT', contract: contract});\n            }).catch((err) => {\n                dispatch({ type: 'CREATE_CONTRACT_ERROR', err});\n            })\n        }\n    );\n}\n\n\nexport const backHome = (props) => {\n    props.history.push('/');\n    console.log('PROPS ====> ', props)\n}\n\nexport const deleteContract = (id, props) => {\n    console.log('PROPS ====> ', props)\n    const del = window.confirm('Voulez-vous supprimer le contract \\\"' + props.contract.title + '\\\" ?');\n    \n    return (\n\n            (dispatch, getState, { getFirebase, getFirestore }) => {\n            //make async call to database\n            const firestore = getFirestore();\n            if (del){\n                firestore.collection('contracts').doc(id).delete().then(() => {\n                    console.log(\"CONTRAT SUPPRIME\");\n                    dispatch({ type: 'DELETE_CONTRACT', contract: id});\n                    backHome(props);\n                }).catch((err) => {\n                    dispatch({ type: 'DELETE_CONTRACT_ERROR', err});\n                    });\n            }\n        })\n    }\n\nexport const modifyContract = (id, props) => {\n    console.log('A MODIFIER ==> ', id)\n    return (\n\n            (dispatch, getState, { getFirebase, getFirestore }) => {\n            //make async call to database\n            const firestore = getFirestore();\n            const myContract = firestore.collection('contracts').doc(id);\n            const content = props.contract.content;\n\n            console.log('\\nContrat à modifier ==> ', myContract);\n            console.log('STATE_To_PROPS ==> ', props)\n            props.history.push('/modify/'+id);\n            \n            myContract.update({\n\n            }).then((res) => {\n                console.log(\"CONTRAT Modifié ==> \", res);\n                dispatch({type: 'MODIFY_CONTRACT', contract: id, state: props})\n               // props.history.push('/contract/'+id);\n    //backHome(props);\n    //Redirection vers la home à gérer avec push\n          \n            })\n    \n          /* firestore.collection('contracts').doc(contract.id).delete().then(() => {\n                dispatch({ type: 'DELETE_CONTRACT', contract: contract});\n            }).catch((err) => {\n                dispatch({ type: 'DELETE_CONTRACT_ERROR', err});\n            })//*/\n        }\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { deleteContract, modifyContract } from '../../store/actions/contractActions';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction ContractDetails(props) {\n  //const id = props.match.params.id;\n  const { contract, auth, deleteContract, modifyContract, id } = props;\n  //const current_time = moment(contract.createdAt.toDate()).calendar();\n\n  if (contract) {\n\n    if  (!auth.uid) return <Redirect to = '/signin' />\n    return (\n\n      <div className=\"row container\">\n      <div className=\"col s12\">\n        <div className=\"card darken-1\">\n          <div className=\"card-content  darken-4 z-depth-4\">\n          <span className = \"card-title grey darken-3 white-text center-align z-depth-2\">{contract.title}</span>\n          <br/>\n          <blockquote>{contract.content}</blockquote>\n          </div>\n          <div className = \"card-action grey lighten-4 grey-text z-depth-4 center\">\n            <div>Fin de validité : {contract.validity}</div>\n            \n          <span>\n           <button className = \"btn right red lighten-1\" onClick={() => deleteContract(id, props)}><i className=\"material-icons\">delete</i></button>\n          </span>\n            <div>Enregistré par {contract.authorFistName} {contract.authorLastName}</div>\n            <div>{moment(contract.createdAt.toDate()).calendar()}</div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    )\n  } else {\n    return (\n      <div className = \"container center\">\n        <p>Chargement du contrat...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const contracts = state.firestore.data.contracts;\n  const contract = contracts ? contracts[id] : null\n\n  return {\n    contract : contract,\n    auth: state.firebase.auth,\n    id: id\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteContract : (id, props) => dispatch(deleteContract(id, props)),\n    modifyContract : (id, props) => dispatch(modifyContract(id, props))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: 'contracts' }\n  ])\n)(ContractDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { modifyContract } from '../../store/actions/contractActions';\nimport { Redirect } from 'react-router-dom';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport 'moment/locale/fr'\n\nclass ModifyContract extends Component {\n\n    handleChange = (e) => {\n      \n        this.setState({\n          [e.target.id] : e.target.value,\n         // creationDate : Date()\n          });\n    }\n\n    setColor = (date, firstRemind, secondRemind) => {\n      if (moment().isSameOrAfter(date))\n        return 'black'\n      if (moment().isBefore(firstRemind))\n        return 'green'\n      if (moment().isBetween(firstRemind, secondRemind))\n        return 'orange'\n      if (moment().isSameOrAfter(secondRemind))\n        return 'red'\n    }\n\n    handleDate = (date) => {\n      \n      console.log('DATE!!!! ===> ', moment.locale())\n      const saveDate = moment(date);\n      const firstRemind = moment(date).subtract(6, 'months');\n      const secondRemind = moment(date).subtract(3, 'months');\n\n      console.log('FIRST REMIND ==> ', firstRemind.format('L'));\n      console.log('SECOND_REMIND  ==> ', secondRemind.format('L'))\n     \n      this.setState({\n        endDate: date, \n        validity : saveDate.format('L'),\n        firstNotif: firstRemind.format('L'),\n        secondNotif: secondRemind.format('L'),\n        colorStatus : this.setColor(saveDate, firstRemind, secondRemind)\n       });\n\n       console.log ('Dans 3 mois ==> ', secondRemind);\n       console.log('Dans 6 mois ==> ', firstRemind);\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.modifyContract(this.state);\n      this.props.history.push('/contract/'+this.props.id);\n    }\n\n    \n  render() {\n    \n    const { auth, contract, id } = this.props;\n\n    if (!auth.uid) return <Redirect to = '/signin' />;\n    return (\n      <div className = \"container\">\n      <div className=\"card col s12\">\n        <form onSubmit = {this.handleSubmit} className = \"card-content grey lighten-4 white z-depth-4\">\n            <h5 className = \"card-title grey darken-3 white-text center-align z-depth-2\">Modification d'un contrat</h5>\n            <br/>\n            <div className = \"input-field grey-text z-depth-0 center\">\n                <label htmlFor = \"title\">Nom du contract</label>\n                <input required type=\"text\" id = \"title\" value = {this.props.content} onChange = {this.handleChange}/>\n            </div>\n            <div className = \"input-field grey-text z-depth-0 center\">\n                <label htmlFor = \"content\">Descriptif du contrat</label>\n                <textarea required className = \"materialize-textarea\" id = \"content\" value = {contract} onChange = {this.handleChange}></textarea>\n            </div>\n            <div >\n              <br/>\n              \n              <div>\n                <span className = \"input-field\">Date de fin de validité : \n                  <DatePicker required id = \"validity\" value = {contract} onChange = {this.handleDate}\n                       minDate = {new Date()}/></span>\n                      <button className = \"btn red lighten-1 z-depth-0 right\">Modifier le contrat</button>\n                      </div>\n                \n            </div>\n        </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n  return {\n    auth: state.firebase.auth,\n    //contract: state.firestore.data.contracts.filter(doc => doc.id === id),\n    id: id,\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return ({\n    modifyContract: (contract) => dispatch (modifyContract(contract))\n  });\n\n}\n\nexport default connect (mapStateToProps, mapDispacthToProps)(ModifyContract);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n      email: '',\n      password: ''\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n          [e.target.id] : e.target.value\n        }\n        );\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.signIn(this.state);\n    }\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) return <Redirect to = '/' />\n    return (\n      <div className = \"container form_style\">\n      <div className = \"myDiv center white-text darken-4 z-depth-4\">S'IDENTIFIER </div>\n        <form onSubmit = {this.handleSubmit} className = \"white\">\n            <div className = \"input-field\">\n            <i class=\"material-icons prefix\">mail_outline</i>\n                <label htmlFor = \"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange = {this.handleChange}/>\n            </div>\n\n            <div className = \"input-field\">\n            <i class=\"material-icons prefix\">lock_outline</i>\n                <label htmlFor = \"password\">Mot de passe</label>\n                <input type=\"password\" id=\"password\" onChange = {this.handleChange}/>\n            </div>\n            <div className = \"input-field center\">\n                <button className = \"btn red lighten-1 z-depth-0\">Connexion</button>\n                <div className = \"red-text center\">\n                  { authError ? <p>{authError}</p> : null }\n                </div>\n            </div>\n        </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions'; \n\nclass SignUp extends Component {\n    state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n          [e.target.id] : e.target.value\n        }\n        );\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.signUp(this.state)\n    }\n\n    render() {\n      \n      const { auth, authError } = this.props;\n\n      if (auth.uid) return <Redirect to = '/' />\n     return (\n      <div className = \"container\">\n       <div className = \"myDiv center white-text darken-4 z-depth-4\">S'ENREGISTRER </div>\n        <form onSubmit = {this.handleSubmit} className = \"white\">\n\n\n        \n          \n          <div className = \"input-field\">\n          <i class=\"material-icons prefix\">contacts</i>\n              <label htmlFor = \"Prénom\">Nom</label>\n              <input type=\"text\" id=\"lastName\" onChange = {this.handleChange}/>\n          </div>\n\n          <div className = \"input-field\">\n          <i class=\"material-icons prefix\">assignment_ind</i>\n              <label htmlFor = \"Nom\">Prénom</label>\n              <input type=\"text\" id=\"firstName\" onChange = {this.handleChange}/>\n          </div>\n\n          <div className = \"input-field\">\n          <i class=\"material-icons prefix\">email</i>\n              <label htmlFor = \"email\">Email</label>\n              <input type=\"email\" id = \"email\" onChange = {this.handleChange}/>\n          </div>\n\n          <div className = \"input-field\">\n          <i class=\"material-icons prefix\">locks</i>\n              <label htmlFor = \"password\">Mot de passe</label>\n              <input type=\"password\" id=\"password\" onChange = {this.handleChange}/>\n          </div>\n\n          <div className = \"input-field center\">\n              <button className = \"btn red lighten-1 z-depth-0\">Valider</button>\n              <div className = \"red-text center\">\n                { authError ? <p>{ authError }</p> : null }\n              </div>\n          </div>\n      \n\n        </form>\n     </div>\n     )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp : (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createContract } from '../../store/actions/contractActions';\nimport { Redirect } from 'react-router-dom';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\n\n\nclass CreateContract extends Component {\n  \n    state = {\n        title: '',\n        content: '',\n        creationDate: '',\n        validity: '',\n        endDate: '',\n        firstNotif: '',\n        secondNotif: '',\n        colorStatus: ''\n\n    }\n\n    handleChange = (e) => {\n      \n        this.setState({\n          [e.target.id] : e.target.value,\n          creationDate : Date()\n          });\n    }\n\n    setColor = (date, firstRemind, secondRemind) => {\n      if (moment().isSameOrAfter(date))\n        return 'black'\n      if (moment().isBefore(firstRemind))\n        return 'green'\n      if (moment().isBetween(firstRemind, secondRemind))\n        return 'orange'\n      if (moment().isSameOrAfter(secondRemind))\n        return 'red'\n\n    }\n\n    handleDate = (date) => {\n      \n      const saveDate = moment(date);\n      const firstRemind = moment(date).subtract(6, 'months');\n      const secondRemind = moment(date).subtract(3, 'months');\n\n  \n      this.setState({\n        endDate: date, \n        validity : saveDate.format('L'),\n        firstNotif: firstRemind.format('L'),\n        secondNotif: secondRemind.format('L'),\n        colorStatus : this.setColor(saveDate, firstRemind, secondRemind)\n       });\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.createContract(this.state);\n      this.props.history.push('/');\n    }\n\n    \n  render() {\n    const { auth } = this.props;\n    \n\n    if (!auth.uid) return <Redirect to = '/signin' />;\n    return (\n      <div className = \"container form_style\">\n      <h5 className = \"myDiv  center white-text darken-4 z-depth-4\">Enregistrement d'un contrat</h5>\n      <div className=\"\">\n        <form onSubmit = {this.handleSubmit} className = \"white\">\n            \n            <br/>\n            <div className = \"input-field grey-text z-depth-0 center\">\n            <i class=\"material-icons prefix\">layers</i>\n                <label htmlFor = \"title\">Nom du contract</label>\n                <input required type=\"text\" id = \"title\" onChange = {this.handleChange}/>\n            </div>\n            <div className = \"input-field grey-text z-depth-0 center\">\n            <i class=\"material-icons prefix\">event_note</i>\n                <label htmlFor = \"content\">Descriptif du contrat</label>\n                <textarea required className = \"materialize-textarea\" id = \"content\" onChange = {this.handleChange}></textarea>\n            </div>\n            <div >\n              <br/>\n              \n              <div>\n                <span className = \"input-field\">Date de fin de validité : \n                  <DatePicker className = \"calendar\" required id = \"validity\" onChange = {this.handleDate}\n                      value = {this.state.endDate} minDate = {new Date()}/></span>\n                      <button className = \"btn red lighten-1 z-depth-0 right\">Créer le contrat</button>\n                      </div>\n                \n            </div>\n        </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return ({\n    createContract: (contract) => dispatch (createContract(contract))\n  });\n\n}\n\nexport default connect (mapStateToProps, mapDispacthToProps)(CreateContract);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ContractDetails from './components/contracts/ContractDetails';\nimport ModifyContract from './components/contracts/ModifyContract';\nimport SignIn from './components/auth/Signin';\nimport SignUp from './components/auth/SignUp';\nimport CreateContract from './components/contracts/CreateContract';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path= '/' component = {Dashboard} />\n            <Route path = '/contract/:id' component = {ContractDetails} />\n            <Route path = '/signin' component = {SignIn} />\n            <Route path = '/signup' component = {SignUp} />\n            <Route path = '/create' component = {CreateContract} />\n            <Route path = '/modify/:id' component = {ModifyContract} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) { \n        case 'LOGIN_ERROR':\n            console.log('Login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n\n        case 'LOGIN_SUCCESS' :\n            console.log('Login Success')\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNOUT_SUCCESS' : \n            console.log('signout success');\n            return state;\n\n        case 'SIGNUP_SUCCESS':\n            console.log('Signup success');\n\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError : action.err.message\n            }\n        \n            default: \n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    contracts: []\n};\n\nconst contractReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_CONTRACT':\n            console.log('Created contract', action.contract);\n            return state;\n\n        case 'CREATE_CONTRACT_ERROR':\n            console.log('create contract error: ', action.err);\n            return state;\n\n        case 'DELETE_CONTRACT':\n            console.log('Contract deleted!', action.contract);\n            return state;\n\n        case 'MODIFY_CONTRACT':\n            console.log('Contract modified!!', action.contract);\n            console.log('Contenu Local: ====> ', action.state.contract.content)\n            return {\n                ...state,\n            };\n            \n        default: \n            return state;\n    }\n}\n\nexport default contractReducer;","import authReducer from './authreducer';\nimport contractReducer from './contractReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    contract: contractReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n//Initialize firebase\n\nvar config = {\n    apiKey: \"AIzaSyCM5G3331ZnSmZ8LGsZsayORxVypJXlXF4\", //YOUR API_KEY HERE\n    authDomain: \"sage-papel-suivi-de-contrats.firebaseapp.com\",\n    databaseURL: \"https://sage-papel-suivi-de-contrats.firebaseio.com\",\n    projectId: \"sage-papel-suivi-de-contrats\",\n    storageBucket: \"sage-papel-suivi-de-contrats.appspot.com\",\n    messagingSenderId: \"494365980569\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({});\n\n  //  firebase.firestore().settings({timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rooteReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n\n    ReactDOM.render(<Provider store = {store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n})"],"sourceRoot":""}